class Solution {
public:
    int maxSumAfterPartitioning(vector<int>& arr, int k) {
        int n = arr.size();
        int dp[n+1];
        memset(dp,0,sizeof(n));
        for(int i=1;i<=n;i++)
        {
            int mx = INT_MIN , best = INT_MIN;
            for(int j = 1; j <= k && i-j>= 0; j++)
            {
                mx = max(mx,arr[i-j]);
                best = max(best,dp[i-j]+mx*j);

            }
            dp[i] = best;
        }
        return dp[n];
    }
};

GFG CODE: 

class Solution
{
    public:
        // Should return decimal equivalent modulo 1000000007 of binary linked list 
        long long unsigned int decimalValue(Node *head)
        { 
           int n =0 ;
           string str = "";
           int mod= 1e9+7;
           Node* temp=head;
           long long unsigned int power = 1;
           long long unsigned int ans =0;
           while(temp){
               n++;
               str += char(temp->data);
               temp = temp->next;
           }
           for(int i = n-1 ; i>=0;i--){
               int x = int(str[i]);
               ans = ans+x*power;
               ans = ans%mod;
               power = (power*2)%mod;
           }
           return  ans%mod;
           
} 
};

